<template>
	<view class="main">
		<view class="nav-header">
			<view class="nav-header-button nav-left-button" @click="onLeftButton">
				<img src="../../image/back.png" mode="widthFix" class="nav-bar-left-img" />
			</view>
			<text class="nav-header-title">收货地址</text>
			<view></view>
		</view>
		<scroll-view class="scrollView" scroll-y='true'>
			<view class="wrap">
				<view class="item">
					<label class="label">
						<img src="../../image/select_on.png" alt="" class="checkbox-icon" />
						<text class="text">设为默认地址</text>
					</label>
				</view>
				<view class="item">
					<text class="text">收货人：</text>
					<input id="name" class="input" placeholder="收货人姓名" />
				</view>
				<view class="item">
					<text class="text">手机号码：</text>
					<input id="mobile" class="input" placeholder="收货人手机号码" />
				</view>
				<view class="item">
					<text class="text">所在区域：</text>
					<input id="area" class="input" placeholder="收货人所在区域" />
					<!-- <view style="margin-left: auto; display: flex; flex-direction: row; align-items: center;">
						<picker id="picker" class="select" mode="multiSelector" range={this.data.dataList}
							range-key="name" value={this.data.selectValue} onchange={this.onselectchange}
							oncolumnchange={this.onselectcolumnchange}>
							<text class="text">点击选择收货所在的区域</text>
						</picker>
						<image class="right-arrow" src="../../image/item_user_address_right.png"></image>
					</view> -->
				</view>
				<view class="item">
					<text class="text">具体地址：</text>
					<input id="address" class="input" placeholder="收货人具体地址" />
				</view>
				<view class="item">
					<text class="text">楼号门牌：</text>
					<input id="house" class="input" placeholder="收货人楼号门牌（例A座3单元1号）" />
				</view>
				<view class="item">
					<text class="text">地址类型：</text>
					<view class="typeScrollView">
						<text class="type type-selected" @click="fnSelectAddressType('公司')">公司</text>
						<text class="type" @click="fnSelectAddressType('住宅')">住宅</text>
						<text class="type" @click="fnSelectAddressType('学校')">学校</text>
						<text class="type" @click="fnSelectAddressType('其他')">其他</text>
					</view>
				</view>
				<text class="saveBtn" @click="fnSave">保存</text>
			</view>
		</scroll-view>
	</view>
</template>
<script>
import $kn from "../../script/kn.js";
import citys from "../../script/city.js";

export default {
	name: 'setaddress',
	data() {
		return {
			id: '',
			isDefault: 0,
			region: '',
			type: 0,
			addresstype: ['公司', '住宅', '学校', '其他'],
			selectValue: [0, 0, 0],
			dataList: []
		}
	},
	methods: {
		onLeftButton() {
			api.closeWin()
		},
		apiready() {
			var pageParam = api.pageParam;
			if (pageParam.id) {
				this.data.id = pageParam.id;
			}
			if (pageParam.isDefault) {
				this.data.isDefault = pageParam.isDefault;
			}
			if (pageParam.name) {
				$kn.byId('name').value = pageParam.name;
			}
			if (pageParam.mobile) {
				$kn.byId('mobile').value = pageParam.mobile;
			}
			if (pageParam.region) {
				this.data.region = pageParam.region;
			}
			if (pageParam.address) {
				$kn.byId('address').value = pageParam.address;
			}
			if (pageParam.house) {
				$kn.byId('house').value = pageParam.house;
			}
			if (pageParam.type) {
				this.data.type = pageParam.type;
			}
			if (citys && citys.length > 0) {
				this.cityList = citys;
				this.initDataList([0, 0, 0]);
			}
			/*
			var that = this;
			api.readFile({
				path: '../../res/city.json'
			}, function(ret,err) {
				if (ret && ret.status) {
					var cityList = JSON.parse(ret.data);
					if (cityList.length > 0) {
						that.cityList = cityList;
						that.initDataList([0,0,0]);
					}
				}
			});
			*/
		},
		initDataList(values) {
			var component0 = [];
			for (var i = 0; i < this.cityList.length; i++) {
				component0[i] = this.cityList[i];
			}
			var component1 = component0[values[0]]['sub'];
			var component2 = component1[values[1]]['sub'];
			var dataList = [component0, component1];
			if (component2) {
				dataList[2] = component2;
			} else {
				dataList[2] = [];
			}
			this.data.dataList = dataList;
			// var picker = document.getElementById('picker');
			// picker.setData({
			//     data: dataList
			// });
		},
		onselectchange(e) {
			var value = e.detail.value;
			this.data.selectValue = value;
			var region = '';
			for (var i = 0; i < value.length; i++) {
				var index = value[i];
				var list = this.data.dataList[i];
				if (list.length > index) {
					region += list[index].name;
				}
			}
			this.data.region = region;
		},
		onselectcolumnchange(e) {
			var column = e.detail.column;
			if (column == this.data.dataList.length - 1) {
				return;
			}
			var value = e.detail.value;
			var selectValue = this.data.selectValue;
			selectValue[column] = value;
			if (column == 0) {
				selectValue[1] = 0;
				selectValue[2] = 0;
			} else if (column == 1) {
				selectValue[2] = 0;
			}
			this.initDataList(selectValue);
		},
		fnSelectAddressType(type) {
			this.data.type = type;
		},
		showToast(msg) {
			api.toast({
				msg: msg
			});
		},
		onRightButton() {
			api.confirm({
				title: '提示',
				msg: '删除收货地址',
				buttons: ['确定', '取消']
			}, function (ret, err) {
				if (1 == ret.buttonIndex) {
					$kn.ajax({
						url: 'addresses/deleteAddress',
						method: 'post',
						data: {
							body: {
								id: api.pageParam.id
							}
						}
					}, function (ret, err) {
						if (ret && ret.data) {
							api.sendEvent({
								name: 'updateAddress'
							});
							api.closeWin();
						} else {
							api.toast({
								msg: '删除失败'
							});
						}
					});
				}
			});
		},
		fnSave() {
			var name = $kn.byId('name').value;
			if (!name) {
				this.showToast('请输入收货人姓名');
				return;
			}

			var mobile = $kn.byId('mobile').value;
			if (!mobile) {
				this.showToast('请输入收货人电话号码');
				return;
			}

			var area = $kn.byId('area').value;
			if (!area) {
				this.showToast('请输入所在区域');
				return;
			}

			var address = $kn.byId('address').value;
			if (!address) {
				this.showToast('请输入具体地址');
				return;
			}

			var house = $kn.byId('house').value;
			if (!house) {
				this.showToast('请输入门牌楼号');
				return;
			}
			api.toast({
				msg: '保存地址！'
			})
		}
	}
}
</script>
<style>
.main {
	height: 100%;
	background-color: #eee;
	padding-bottom: 16px;
}
.nav-header {
	background-color: #e3007f;
	flex-direction: row;
	align-items: center;
	justify-content: space-between;
	width: 100%;
	height: 80px;
	padding-top: 35px;
	flex-shrink: 0;
}
.nav-header-title {
	color: #fff;
	font-size: 18px;
	font-weight: bold;
}
.nav-header-button {
	flex-direction: row;
	align-items: center;
	min-width: 44px;
	height: 100%;
}
.nav-header-button:active {
	opacity: 0.5;
}
.nav-left-button {
	justify-content: flex-start;
	padding-left: 10px;
}
.nav-bar-left-img {
	width: 11px;
}
.nav-header-text {
	color: #fff;
	font-size: 17px;
}
.checkbox-icon {
	width: 20px;
	height: 20px;
	margin-right: 6px;
}
.scrollView {
	flex: 1;
}
.item {
	width: 100%;
	display: flex;
	flex-direction: row;
	align-items: center;
	height: 50px;
	padding: 0 10px;
	border-bottom: 1px solid #eee;
	background-color: #fff;
}
.label {
	flex-direction: row;
	align-items: center;
}
.text {
	font-size: 14px;
	color: #000;
}
.input {
	flex: 1;
	border: none;
	font-size: 14px;
	color: #333;
}
.select {
	padding-right: 12px;
}
.select:active {
	opacity: 0.7;
}
.right-arrow {
	width: 6px;
	height: 11px;
	margin-right: 10px;
}
.typeScrollView {
	display: flex;
	flex-direction: row;
	align-items: center;
	flex: 1;
	overflow: auto;
}
.type {
	height: 28px;
	width: 50px;
	margin-right: 10px;
	font-size: 12px;
	text-align: center;
	line-height: 28px;
	border-radius: 4px;
	color: #888;
	border: 1px solid #888;
}
.type-selected {
	color: #e3007f;
	border: 1px solid #e3007f;
}
.saveBtn {
	display: block;
	width: 200px;
	height: 44px;
	margin-top: 10px;
	background-color: #e3007f;
	border-radius: 22px;
	text-align: center;
	font-size: 18px;
	color: #fff;
	line-height: 44px;
	margin-left: 50%;
	transform: translateX(-50%);
}
.saveBtn:active {
	opacity: 0.7;
}
</style>
